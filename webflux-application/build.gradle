plugins {
    id 'java'
}

group = 'leesangho.adtechstudy'
version = 'unspecified'

repositories {
    mavenCentral()
}

dependencies {
    implementation project(":domain")
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.1.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'io.projectreactor.tools:blockhound-junit-platform:1.0.6.RELEASE'

    testImplementation testFixtures(project(":domain"))
    if (isMacOs() && isAArch64()) {
        implementation 'io.netty:netty-resolver-dns-native-macos:4.1.99.Final:osx-aarch_64'
    }
}

test {
    useJUnitPlatform()
}

static def isMacOs() {
    return System.getProperty('os.name').toLowerCase().contains('mac')
}

static def isAArch64() {
    return System.getProperty('os.arch').toLowerCase().contains('aarch64')
}

tasks.withType(Test).all {
    if (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_13)) {
        jvmArgs += [
                "-XX:+AllowRedefinitionToAddDeleteMethods"
        ]
    }
}
